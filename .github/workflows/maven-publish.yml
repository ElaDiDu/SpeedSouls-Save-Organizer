# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java#apache-maven-with-a-settings-path

name: Maven Package Release

on:
  push:
    tags:
    - v*

jobs:
  build:
    runs-on: windows-latest
    steps:
    - name: Configure git
      run: "git config --global core.autocrlf false"
      shell: bash
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Get the version
      id: get_version
      run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
      shell: bash      
    - name: Set up JDK 12
      uses: actions/setup-java@v1
      with:
        java-version: 12
    - name: Build with Maven
      shell: bash
      run: mvn -B package --file pom.xml
    - name: Create Zip File
      run: 7z a -tzip SaveOrganizer-${{ steps.get_version.outputs.VERSION }}.zip target/*.exe
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.MEH }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.MEH }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./SaveOrganizer-${{ steps.get_version.outputs.VERSION }}.zip
        asset_name: SaveOrganizer-${{ steps.get_version.outputs.VERSION }}.zip
        asset_content_type: application/zip 
